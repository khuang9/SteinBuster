/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw2(PApplet appc, GWinData data) { //_CODE_:window1:620608:
  appc.background(230);
} //_CODE_:window1:620608:

public void textfield2_change1(GTextField source, GEvent event) { //_CODE_:textfield2:899112:
  println("textfield2 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:textfield2:899112:

public void button1_click1(GButton source, GEvent event) { //_CODE_:button1:609713:
  println("button1 - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:button1:609713:

public void categories_click(GDropList source, GEvent event) { //_CODE_:selectCategory:866543:
  println("categories - GDropList >> GEvent." + event + " @ " + millis());
} //_CODE_:selectCategory:866543:

public void textfield3_change1(GTextField source, GEvent event) { //_CODE_:textfield3:602102:
  println("textfield3 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:textfield3:602102:

public void button2_click1(GButton source, GEvent event) { //_CODE_:button2:627222:
  println("button2 - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:button2:627222:

public void dropList1_click1(GDropList source, GEvent event) { //_CODE_:selectSubjectA:321873:
  println("selectSubjectA - GDropList >> GEvent." + event + " @ " + millis());
} //_CODE_:selectSubjectA:321873:

public void dropList1_click2(GDropList source, GEvent event) { //_CODE_:selectClueType:313781:
  println("selectClueType - GDropList >> GEvent." + event + " @ " + millis());
} //_CODE_:selectClueType:313781:

public void selectSubjectB_click(GDropList source, GEvent event) { //_CODE_:selectSubjectB:449193:
  println("selectSubjectB - GDropList >> GEvent." + event + " @ " + millis());
} //_CODE_:selectSubjectB:449193:

public void button3_click1(GButton source, GEvent event) { //_CODE_:button3:480002:
  println("button3 - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:button3:480002:

public void slider1_change1(GSlider source, GEvent event) { //_CODE_:slider1:696747:
  println("slider1 - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:slider1:696747:

public void checkbox1_clicked1(GCheckbox source, GEvent event) { //_CODE_:checkbox1:598382:
  println("checkbox1 - GCheckbox >> GEvent." + event + " @ " + millis());
  positionMatters = !positionMatters;
  println(positionMatters);
} //_CODE_:checkbox1:598382:

public void button4_click1(GButton source, GEvent event) { //_CODE_:button4:982509:
  println("button4 - GButton >> GEvent." + event + " @ " + millis());
  checks = 0;
  guesses = 0;
  
  if (!positionMatters) {
    for (int col = 0; col < n; col++)
      setOption(0, col, col);
  }
  //keyCode = ENTER;
  //keyPressed();
  //solve();
  loop();
  //printResult();
  
} //_CODE_:button4:982509:

public void checkbox2_clicked1(GCheckbox source, GEvent event) { //_CODE_:checkbox2:596463:
  println("checkbox2 - GCheckbox >> GEvent." + event + " @ " + millis());
} //_CODE_:checkbox2:596463:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  window1 = GWindow.getWindow(this, "Window title", 0, 0, 400, 300, JAVA2D);
  window1.noLoop();
  window1.setActionOnClose(G4P.KEEP_OPEN);
  window1.addDrawHandler(this, "win_draw2");
  textfield2 = new GTextField(window1, 140, 75, 120, 30, G4P.SCROLLBARS_HORIZONTAL_ONLY);
  textfield2.setPromptText("Enter category options");
  textfield2.setOpaque(true);
  textfield2.addEventHandler(this, "textfield2_change1");
  button1 = new GButton(window1, 270, 75, 44, 21);
  button1.setText("Enter");
  button1.addEventHandler(this, "button1_click1");
  selectCategory = new GDropList(window1, 15, 75, 90, 80, 3, 10);
  selectCategory.setItems(loadStrings("list_866543"), 0);
  selectCategory.addEventHandler(this, "categories_click");
  textfield3 = new GTextField(window1, 140, 20, 120, 30, G4P.SCROLLBARS_HORIZONTAL_ONLY);
  textfield3.setPromptText("Enter category");
  textfield3.setOpaque(true);
  textfield3.addEventHandler(this, "textfield3_change1");
  button2 = new GButton(window1, 270, 20, 44, 21);
  button2.setText("Enter");
  button2.addEventHandler(this, "button2_click1");
  selectSubjectA = new GDropList(window1, 15, 150, 90, 80, 3, 10);
  selectSubjectA.setItems(loadStrings("list_321873"), 0);
  selectSubjectA.addEventHandler(this, "dropList1_click1");
  selectClueType = new GDropList(window1, 120, 150, 90, 80, 3, 10);
  selectClueType.setItems(loadStrings("list_313781"), 0);
  selectClueType.addEventHandler(this, "dropList1_click2");
  selectSubjectB = new GDropList(window1, 225, 150, 90, 80, 3, 10);
  selectSubjectB.setItems(loadStrings("list_449193"), 0);
  selectSubjectB.addEventHandler(this, "selectSubjectB_click");
  button3 = new GButton(window1, 330, 150, 60, 21);
  button3.setText("Add clue");
  button3.addEventHandler(this, "button3_click1");
  slider1 = new GSlider(window1, 15, 235, 200, 47, 10.0);
  slider1.setShowValue(true);
  slider1.setLimits(5, 1, 10);
  slider1.setNbrTicks(10);
  slider1.setShowTicks(true);
  slider1.setNumberFormat(G4P.INTEGER, 0);
  slider1.setOpaque(false);
  slider1.addEventHandler(this, "slider1_change1");
  label1 = new GLabel(window1, 15, 220, 100, 20);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Animation Speed");
  label1.setOpaque(false);
  checkbox1 = new GCheckbox(window1, 7, 6, 120, 20);
  checkbox1.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  checkbox1.setText("Position Matters");
  checkbox1.setOpaque(false);
  checkbox1.addEventHandler(this, "checkbox1_clicked1");
  button4 = new GButton(window1, 310, 259, 80, 30);
  button4.setText("Solve");
  button4.addEventHandler(this, "button4_click1");
  checkbox2 = new GCheckbox(window1, 15, 277, 120, 20);
  checkbox2.setIconAlign(GAlign.LEFT, GAlign.MIDDLE);
  checkbox2.setText("Show Animation");
  checkbox2.setOpaque(false);
  checkbox2.addEventHandler(this, "checkbox2_clicked1");
  window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window1;
GTextField textfield2; 
GButton button1; 
GDropList selectCategory; 
GTextField textfield3; 
GButton button2; 
GDropList selectSubjectA; 
GDropList selectClueType; 
GDropList selectSubjectB; 
GButton button3; 
GSlider slider1; 
GLabel label1; 
GCheckbox checkbox1; 
GButton button4; 
GCheckbox checkbox2; 
